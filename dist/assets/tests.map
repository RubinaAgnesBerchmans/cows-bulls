{"version":3,"sources":["vendor/ember-cli/tests-prefix.js","cows-bulls/tests/lint/app.lint-test.js","cows-bulls/tests/lint/templates.template.lint-test.js","cows-bulls/tests/lint/tests.lint-test.js","cows-bulls/tests/test-helper.js","cows-bulls/tests/unit/routes/main-page-test.js","vendor/ember-cli/app-config.js","vendor/ember-cli/tests-suffix.js"],"sourcesContent":["'use strict';\n","define(\"cows-bulls/tests/lint/app.lint-test\", [], function () {\n  \"use strict\";\n\n  QUnit.module('ESLint | app');\n  QUnit.test('app.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'app.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('resolver.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'resolver.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('router.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'router.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('routes/main-page.js', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'routes/main-page.js should pass ESLint\\n\\n21:13 - Unexpected console statement. (no-console)\\n24:13 - Unexpected console statement. (no-console)');\n  });\n});","define(\"cows-bulls/tests/lint/templates.template.lint-test\", [], function () {\n  \"use strict\";\n\n  QUnit.module('TemplateLint');\n  QUnit.test('cows-bulls/templates/application.hbs', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'cows-bulls/templates/application.hbs should pass TemplateLint.\\n\\n');\n  });\n  QUnit.test('cows-bulls/templates/main-page.hbs', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'cows-bulls/templates/main-page.hbs should pass TemplateLint.\\n\\ncows-bulls/templates/main-page.hbs\\n  2:1  error  Incorrect indentation for `<form>` beginning at L2:C1. Expected `<form>` to be at an indentation of 2 but was found at 1.  block-indentation\\n  6:1  error  Incorrect indentation for `<div>` beginning at L6:C1. Expected `<div>` to be at an indentation of 2 but was found at 1.  block-indentation\\n  5:9  error  Incorrect indentation for `form` beginning at L2:C1. Expected `</form>` ending at L5:C9 to be at an indentation of 1 but was found at 2.  block-indentation\\n  3:5  error  Incorrect indentation for `{{input}}` beginning at L3:C5. Expected `{{input}}` to be at an indentation of 3 but was found at 5.  block-indentation\\n  4:2  error  Incorrect indentation for `<button>` beginning at L4:C2. Expected `<button>` to be at an indentation of 3 but was found at 2.  block-indentation\\n  7:2  error  Incorrect indentation for `<form>` beginning at L7:C2. Expected `<form>` to be at an indentation of 3 but was found at 2.  block-indentation\\n  11:10  error  Incorrect indentation for `form` beginning at L7:C2. Expected `</form>` ending at L11:C10 to be at an indentation of 2 but was found at 3.  block-indentation\\n  8:6  error  Incorrect indentation for `{{input}}` beginning at L8:C6. Expected `{{input}}` to be at an indentation of 4 but was found at 6.  block-indentation\\n  9:3  error  Incorrect indentation for `<button>` beginning at L9:C3. Expected `<button>` to be at an indentation of 4 but was found at 3.  block-indentation\\n  6:20  error  elements cannot have inline styles  no-inline-styles\\n  4:33  error  you must use double quotes in templates  quotes\\n  9:35  error  you must use double quotes in templates  quotes\\n');\n  });\n});","define(\"cows-bulls/tests/lint/tests.lint-test\", [], function () {\n  \"use strict\";\n\n  QUnit.module('ESLint | tests');\n  QUnit.test('test-helper.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'test-helper.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('unit/routes/main-page-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/main-page-test.js should pass ESLint\\n\\n');\n  });\n});","define(\"cows-bulls/tests/test-helper\", [\"cows-bulls/app\", \"cows-bulls/config/environment\", \"@ember/test-helpers\", \"ember-qunit\"], function (_app, _environment, _testHelpers, _emberQunit) {\n  \"use strict\";\n\n  (0, _testHelpers.setApplication)(_app.default.create(_environment.default.APP));\n  (0, _emberQunit.start)();\n});","define(\"cows-bulls/tests/unit/routes/main-page-test\", [\"qunit\", \"ember-qunit\"], function (_qunit, _emberQunit) {\n  \"use strict\";\n\n  (0, _qunit.module)('Unit | Route | main-page', function (hooks) {\n    (0, _emberQunit.setupTest)(hooks);\n    (0, _qunit.test)('it exists', function (assert) {\n      let route = this.owner.lookup('route:main-page');\n      assert.ok(route);\n    });\n  });\n});","define('cows-bulls/config/environment', [], function() {\n  var prefix = 'cows-bulls';\ntry {\n  var metaName = prefix + '/config/environment';\n  var rawConfig = document.querySelector('meta[name=\"' + metaName + '\"]').getAttribute('content');\n  var config = JSON.parse(unescape(rawConfig));\n\n  var exports = { 'default': config };\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n  return exports;\n}\ncatch(err) {\n  throw new Error('Could not read config from meta tag with name \"' + metaName + '\".');\n}\n\n});\n","require('cows-bulls/tests/test-helper');\nEmberENV.TESTS_FILE_LOADED = true;\n"],"names":[],"mappings":"AAAA;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjBA;AACA;","file":"tests.js"}